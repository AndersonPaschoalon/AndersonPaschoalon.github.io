<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-09-24T17:39:23-03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Anderson Paschoalon</title><subtitle>A front-end for my academic formation, projects, and some more stuff.</subtitle><author><name>Anderson Paschoalon</name></author><entry><title type="html">Dawn of the Silver Hands – Join the Silver Hands!</title><link href="http://localhost:4000/dsilhand.html" rel="alternate" type="text/html" title="Dawn of the Silver Hands – Join the Silver Hands!" /><published>2022-09-24T03:00:00-03:00</published><updated>2022-09-24T03:00:00-03:00</updated><id>http://localhost:4000/dsilhand</id><content type="html" xml:base="http://localhost:4000/dsilhand.html"><![CDATA[<p align="center">
	<img src="./assets/img/posts/dsilhand/DSilhandLogo.jpg" width="600" />
</p>

<p><em>For centuries the Daedric Wolves lived among the sons of Skyrim in secret.</em></p>

<p><em>But no one wanted to believe.</em>
<em>Or had the strength to fight.</em></p>

<p><em>Now it is up to YOU to choose which side will prevail.</em></p>

<p><em>The Beast Blood… Or the Silver Hands!</em></p>

<h2 id="overview">Overview</h2>

<p>This mod allow you to join the Silver Hand faction!</p>

<p>It is up to you to decide! You can still follow the vanilla path joining The Companions, but this mod allow you to see an alternate timeline where the Dragonborn joins the Silver Hand instead!</p>

<p>I am really grateful for all the positive comments and good reception of this mod.</p>

<p>It has already received some reviews from the portal <em>THE GAMER</em>, and the youtube player <em>yerak</em>:</p>

<h1 id="-skyrim-mod-lets-players-join-the-silver-hands-"><a href="https://www.thegamer.com/skyrim-join-silver-hands/" target="_blank"> <em>Skyrim Mod Lets Players Join The Silver Hands</em> </a></h1>

<p><a href="https://www.youtube.com/watch?v=CaOS87Rn4L4" target="_blank">
 <img src="https://img.youtube.com/vi/CaOS87Rn4L4/0.jpg" alt="Mods de Skyrim - Agora você pode ser um Mão de Prata contra Companions! (Dawn of the Silver Hands)" width="360" height="180" border="10" />
</a></p>

<p><strong>Dragonborn as a Silver Hand!</strong></p>

<p>This mod tries to imagine how would be the sequence of facts if he decided to join the Silver Hands instead. It is not a simple mod with some bounty quests. It has a full story-line that tries to follows the same sequence of facts you see in The Companions quest-line, but from the Silver Hands perspective:</p>

<ul>
  <li>Find the missing pieces of Wuulthad!</li>
  <li>Work in the shadows to dismantle The Companions plans!</li>
  <li><strong>Defend Gallows Rock</strong> from Companions invasion, and <strong>attack Jorrvaskr</strong>!</li>
  <li>Reassemble the legendary Axe Wuuthrad!</li>
</ul>

<p>The amount of content added by this mod is similar in therms of game-play with The Companions content, alongside with <strong>two new Silver Hand’s locations</strong> and a new <strong>Player House</strong>.</p>

<p align="center">
	<img src="./assets/img/posts/dsilhand/Skyrim90.jpeg" width="600" />
</p>

<p align="center">
	<img src="./assets/img/posts/dsilhand/Skyrim93.jpeg" width="600" />
</p>

<p align="center">
	<img src="./assets/img/posts/dsilhand/ScreenShot7.jpeg" width="600" />
</p>

<p align="center">
	<img src="./assets/img/posts/dsilhand/Skyrim13.jpeg" width="600" />
</p>

<p align="center">
	<img src="./assets/img/posts/dsilhand/Skyrim73.jpeg" width="600" />
</p>

<p><strong>Improoved Experience</strong></p>

<p>A new <strong>soundtrack</strong> is added to both factions, to reflect the moods of The Companions and The Silver Hands. The Companions have a glorious, urban and bard-sh mood, to reflect their proud. The Silver Hands have a darker and wild-sh and seclude soundtrack, reflecting they are isolated in the wilds.</p>

<p>If you join the Silver Hands, new content will be available:</p>

<ul>
  <li>Acquire a new house in Gallows Rock;</li>
  <li>Two new followers;</li>
  <li>Forge and Upgrade Silver Weapons, and learn to forge stronger type of Silver Sword;</li>
  <li>New unique weapons and armours;</li>
  <li>5 new radiant quests to allow a limitless game-play content for the faction.</li>
</ul>

<h2 id="lore">Lore</h2>

<p>This mod tries to be as lore-friendly as possible. Since not much is explicitly said about the Silver Hands the the series, some speculations exercises are made.</p>

<p>I started to write the story for this mod before FudgeMuppet released their video about the Silver Hands. The funny thing is some of his conclusions about the past of the Silver Hands are mine as well.</p>

<p>I highly recommend you to watch his video before playing my mod:</p>

<p><a href="https://www.youtube.com/watch?v=TXf46T8dVck" target="_blank">
 <img src="https://img.youtube.com/vi/TXf46T8dVck/0.jpg" alt="Skyrim - The Hidden TRUTH About The Silver Hand - An Elder Scrolls Lore Theory" width="360" height="180" border="10" />
</a></p>

<p>Some assumptions I took about the past of the Silver Hands are:</p>

<ul>
  <li>
    <p>They were formed as a dissident group of The Companions after Terrfyg (https://elderscrolls.fandom.com/wiki/Terrfyg) made the pact with the Glenmoril Witches (https://elderscrolls.fandom.com/wiki/Glenmoril_Witches). They are called “dissidents” by Kodlak and Vignar.</p>
  </li>
  <li>
    <p>The Silver Hands are very devoted to the Ysgramor legacy, and they see themselves as the true holders of his legacy in Skyrim.</p>
  </li>
  <li>
    <p>The Silver Hands are a recluse faction, but keep relationships with farmers, villagers and some Jarls.</p>
  </li>
  <li>
    <p>In the start of the game the Silver Hands have the possession of four fragments of Wuulthrad, the same number of fragments The Companions have. They were searching for the fragments since their foundation.</p>
  </li>
</ul>]]></content><author><name>Anderson Paschoalon</name></author><category term="Skyrim" /><category term="Creation Kit" /><category term="Papyrus" /><category term="Game Development" /><category term="Mod" /><summary type="html"><![CDATA[This Skyrim mod allows you to join the Silver Hand faction!]]></summary></entry><entry><title type="html">NexusPackager App</title><link href="http://localhost:4000/nexus-packager-app.html" rel="alternate" type="text/html" title="NexusPackager App" /><published>2022-09-24T03:00:00-03:00</published><updated>2022-09-24T03:00:00-03:00</updated><id>http://localhost:4000/nexus-packager-app</id><content type="html" xml:base="http://localhost:4000/nexus-packager-app.html"><![CDATA[<h1 id="nexus-build-app">Nexus Build App</h1>

<p>Nexus Packager App is a command-line tool for automating the packaging process of Nexus mods.</p>

<p>I create this app because I wanted a flexible and simple tool to package both my Skyrim and Age of Mythology mods.</p>

<p>This application:</p>

<ul>
  <li>Package files defined by rules into a ZIP, and preserve its original directory structure;</li>
  <li>Scriptable rules, write once, so you will never forget any files;</li>
  <li>Creates an uninstall script.</li>
</ul>]]></content><author><name>Anderson Paschoalon</name></author><category term="Markdown" /><category term="HTML" /><category term="Bootstrap" /><category term="Python" /><category term="Docx" /><category term="Pdf" /><category term="Txt" /><category term="Md" /><summary type="html"><![CDATA[Nexus Packager App is a command-line tool for automating the packaging process of Nexus mods.]]></summary></entry><entry><title type="html">The Lost Continent of Adria – Age of Mithology Mod</title><link href="http://localhost:4000/mods-age-of-mitology.html" rel="alternate" type="text/html" title="The Lost Continent of Adria – Age of Mithology Mod" /><published>2022-09-24T03:00:00-03:00</published><updated>2022-09-24T03:00:00-03:00</updated><id>http://localhost:4000/mods-age-of-mitology</id><content type="html" xml:base="http://localhost:4000/mods-age-of-mitology.html"><![CDATA[<p><em>In the mythical continent of Adria, a fantastic and magical land there is a permanent conflict between all the human and beast races that inhabit that land.</em></p>

<p><em>You will have the mission to lead the Nords, a human race that lives in the snowy mountains and pine forests of the north through a journey to conquer the world.</em></p>

<p><em>You will travel through deserts, forests, mountains, volcanos, and forests, full of secrets, animals, and mythical creatures.</em></p>

<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_1.jpg" width="600" />
</p>

<h1 id="about-this-mod">About this Mod</h1>

<h2 id="main-campaign">Main Campaign</h2>

<p align="center">
	<img src="./assets/img/posts/aom/Adria.jpg" width="600" />
</p>

<p>This mod brings a new Campaign with RPG-like lore and a collection of new random maps for Age of Mythology.</p>

<p>My idea behind the Campaign is to combine some new concepts:</p>

<ul>
  <li>
    <p>Create a new mechanic (more “realistic”) where you can’t create new unity between each quest. You will receive new units after each quest, but you cannot spawn new units on each of them. Every unity is precious, and you have to use them wisely.</p>
  </li>
  <li>
    <p>This is not a “mythological reality”, but an RPG-like fantasy world, such as Dungeons and Dragons, and The Elder Scrolls. You will have a continent to explore, and many races, some humans, some not. But you are going to control armies, not a character.</p>
  </li>
  <li>
    <p>The Campaign is composed of 5 quest, each one happening in a different part of the world.</p>
  </li>
</ul>

<p>The Lost Continent of Adria has six major regions, each one of which is inhabited by one different race:</p>

<ul>
  <li><strong>Nordic Taiga</strong>: the northern region of the continent, the homeland of the Nords and the Dwarves. If full of snowy mountains and pine forests. Their capital is hidden on a hill in the middle of the forest. The wildlife is composed mainly of deer, bears, and wolves.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_6.jpg" width="600" />
</p>

<ul>
  <li><strong>Central Desert</strong>: homeland of the Bedouins, the Central desert is a harsh land with few trees and dry weather.  But the land is rich in minerals, and some oases with palm trees and fish can be found. The Bedouin’s capital is the have the stronger fortifications on the whole continent.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_2.jpg" width="600" />
</p>

<ul>
  <li><strong>South Savannah</strong>: homeland of the Werejackals, is a vast savannah with plenty of natural resources. Their capital is a farm city close to the sea. The wildlife is composed of savannah animals like Giraffes, Gazelles, and Lions, but also by fearsome Nemea Lions.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_8.jpg" width="600" />
</p>

<ul>
  <li><strong>Rock Valey</strong>: The most mysterious and secluded land of the continent. It is a misty land surrounded by the western sea and the fire mountains at the east. Dense fogs fill its pine-dark forest, and the wildlife is mostly composed of mysterious mythical creatures. Its wildlife includes giant scrabs, flying serpents,  walking trees, manticores, chimeras, and dragons.  This is the homeland of the Trolls. Each clan leader of each settlement wons a pet, a faithful beast from the wilds.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_11.jpg" width="600" />
</p>

<ul>
  <li><strong>Oak Forest</strong>: An oak forest surrounded in the west by the Rock Mountains. It is inhabited by the Cyclops, the stronger race of the continent. They have only one main city close to the sea and the Savannah. The wildlife is composed mainly by deer and boars.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_13.jpg" width="600" />
</p>

<ul>
  <li><strong>Palm Isthmus</strong>: A small portion of land in the south, inhabited by the Cretans. They are fewer in number but have the stronger navy army on the continent. In the forest, dryads can be found, and in the sea Krakens, Leviathans, Carcinos, and Wales can be seen.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_12.jpg" width="600" />
</p>

<h2 id="random-maps">Random Maps</h2>

<p>This mod includes some new random maps as well, not related to the campaign, but each one with a unique mechanic:</p>

<ul>
  <li><strong>Arabian Desert</strong>: A large desert with hidden treasures and bandit camps and scarce wood.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom/Screenshot_14.jpg" width="600" />
</p>

<ul>
  <li><strong>Elysius Camps</strong>: A miraculous and brilliant land, with plenty of resources available, but you will have to fight for it.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_20.jpg" width="600" />
</p>

<ul>
  <li><strong>Guardians’ Valley</strong>: Each player starts with a Guardian in the Valley of the Kings.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_21.jpg" width="600" />
</p>

<ul>
  <li><strong>Guardians’ Megalopolis</strong>: Each player starts with a Guardian in a Savanna megalopolis.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_15.jpg" width="600" />
</p>

<ul>
  <li><strong>One Settlement</strong>: All players start with one settlement and some small villages. But there are no other settlements available.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_16.jpg" width="600" />
</p>

<ul>
  <li><strong>Ragnarock</strong>: A Battle Royale among the gods in a nordic apocalyptic World.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_19.jpg" width="600" />
</p>

<ul>
  <li><strong>Sahara Desert</strong>: All resources are hard to be found on this map, especially wood.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_18.jpg" width="600" />
</p>

<ul>
  <li><strong>Starting Army</strong>: Each player starts with a huge army.</li>
</ul>
<p align="center">
	<img src="./assets/img/posts/aom//Screenshot_17.jpg" width="600" />
</p>]]></content><author><name>Anderson Paschoalon</name></author><category term="Age of Mitology" /><category term="Game Development" /><category term="Mod" /><summary type="html"><![CDATA[This mod brings a new Campaign with RPG-like lore and a collection of new random maps for Age of Mythology.]]></summary></entry><entry><title type="html">MdConv</title><link href="http://localhost:4000/mdconv.html" rel="alternate" type="text/html" title="MdConv" /><published>2022-09-24T03:00:00-03:00</published><updated>2022-09-24T03:00:00-03:00</updated><id>http://localhost:4000/mdconv</id><content type="html" xml:base="http://localhost:4000/mdconv.html"><![CDATA[<p>Just a simple command line app to convert Markdown files into different formats.</p>
<ul>
  <li>HTML</li>
  <li>DOCX</li>
  <li>PDF</li>
  <li>TXT</li>
</ul>

<p>If you type <code class="language-plaintext highlighter-rouge">mdconv.exe --help</code> you can read its usage manual:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    NAME
        MdConv.exe - an app to convert md files into different formats.

    USAGE
        mdconv.exe --md &lt;markdown-file&gt; --title &lt;html-title&gt;
        mdconv.exe --md &lt;markdown-file&gt; --title &lt;html-title&gt; --output &lt;output-format&gt;
        mdconv.exe --help
        mdconv.exe --version
        mdconv.exe --license

    OPTIONS
        -m &lt;md-file&gt;, --md=&lt;md-file&gt;
            Path to the Markdonw file to be converted into the specified format.
            Default format is HTML.
        -t &lt;title&gt;, --title=&lt;html-title&gt;
            Option required for HTML format. Represents the title of the page.
        -o &lt;output-file-format&gt;, --output=&lt;output-file-format&gt;
            Output file format. If it is not specified, or an invalid format is used, HTML is assumed.
            Valid formats: html, docx, pdf, txt
        -h, --help
            Prints this help manual.
        -l, --license:
            Prints application license.
        -v, --version:
            Prints application version
</code></pre></div></div>

<h2 id="credits">Credits</h2>

<ul>
  <li>
    <p>Application developed by Anderson Paschoalon</p>
  </li>
  <li>
    <p>Python packages used can be found at <a href="requirements.txt">requirements.txt</a></p>
  </li>
  <li>
    <p>App icon downloaded at https://icon-icons.com/pt/icone/markdown-aqui-logo/169967</p>
  </li>
</ul>]]></content><author><name>Anderson Paschoalon</name></author><category term="Markdown" /><category term="HTML" /><category term="Bootstrap" /><category term="Python" /><category term="Docx" /><category term="Pdf" /><category term="Txt" /><category term="Md" /><summary type="html"><![CDATA[A command line app to convert Markdown files into different formats, such as Html, Pdf, Txt, and Docx.]]></summary></entry><entry><title type="html">Quest Dialog Manager</title><link href="http://localhost:4000/quest-dialog-manager.html" rel="alternate" type="text/html" title="Quest Dialog Manager" /><published>2022-06-01T03:00:00-03:00</published><updated>2022-06-01T03:00:00-03:00</updated><id>http://localhost:4000/quest-dialog-manager</id><content type="html" xml:base="http://localhost:4000/quest-dialog-manager.html"><![CDATA[<h1 id="quest-dialog-manager">Quest Dialog Manager</h1>

<p>CK QuestDialogManages is a tool to help manage your quest mod:</p>
<ul>
  <li>Allows the conversion and generation of many audio
files formats (wav, xwm, fuz)</li>
  <li>Allow you easily manage the audios from you mod: listen
to audios, manage file names,and check subtitles;</li>
  <li>Generate beautifull and comprehensive documentation;</li>
  <li>Reusable Comments and anotations for your documentation.
Regenerate as many times you want with no loss.</li>
</ul>]]></content><author><name>Anderson Paschoalon</name></author><category term="Skyrim" /><category term="Mod" /><category term="Desktop" /><category term="Python" /><summary type="html"><![CDATA[Computer Program Registration Certificate.]]></summary></entry><entry><title type="html">Swing Traffic Generator</title><link href="http://localhost:4000/swing.html" rel="alternate" type="text/html" title="Swing Traffic Generator" /><published>2022-05-27T03:00:00-03:00</published><updated>2022-05-27T03:00:00-03:00</updated><id>http://localhost:4000/swing</id><content type="html" xml:base="http://localhost:4000/swing.html"><![CDATA[<h1 id="swingxficgenerator-v032">Swingxficgenerator (v0.3.2)</h1>

<p>This is a re-upload for the Swing Traffic Generator. Its official homepage is located <a href="https://cseweb.ucsd.edu/~kvishwanath/Swing/"><strong>HERE</strong></a>.</p>

<p>The swing traffic generator is a tool used in the publication <em>Swing: Realistic and Responsive Network Traffic Generation</em>. But the original source code has a compilation error, and I fixed it.</p>

<p>I tried to contact the author some times by email, but with no response. If the author, or anyone related with the project find this repository, please, contact me.</p>

<p>Since the Author <a href="AUTHORS"><strong>Kashi Venkatesh Vishwanath</strong></a> allowed to redistribute the code, according to its <a href="LICENSE"><strong>LICENCE</strong></a> I decided publish it here, so anyone can use this tool.</p>

<p>The original readme file, with a quick introduction, can be found <a href="README"><strong>here</strong></a>.</p>

<p>If you use <strong>Swingxficgenerator</strong> in any work, please, cite the original paper. I also recomment the reading for a deeper undertanding of the tool.</p>

<blockquote>
  <p><strong>Plain Text</strong></p>
  <blockquote>
    <p>K. V. Vishwanath and A. Vahdat, “Swing: Realistic and Responsive Network Traffic Generation,” in IEEE/ACM Transactions on Networking, vol. 17, no. 3, pp. 712-725, June 2009, doi: 10.1109/TNET.2009.2020830.</p>
  </blockquote>
</blockquote>

<blockquote>
  <p><strong>BibTeX</strong></p>
  <blockquote>
    <p><code class="language-plaintext highlighter-rouge">@ARTICLE{4914755,
  author={Vishwanath, Kashi Venkatesh and Vahdat, Amin},
  journal={IEEE/ACM Transactions on Networking}, 
  title={Swing: Realistic and Responsive Network Traffic Generation}, 
  year={2009},
  volume={17},
  number={3},
  pages={712-725},
  doi={10.1109/TNET.2009.2020830}}</code></p>
  </blockquote>
</blockquote>

<p>I used this paper in my master thesis and on its paper, so I’m really greatefull for his work.</p>

<p>My thesis can be found here:
<a href="http://repositorio.unicamp.br/acervo/detalhe/1090415?guid=1657351507677&amp;returnUrl=%2fresultado%2flistar%3fguid%3d1657351507677%26quantidadePaginas%3d1%26codigoRegistro%3d1090415%231090415&amp;i=1">SIMITAR: synthetic and realistic network traffic generation</a></p>

<p>And my article “<strong>Automated Selection of Inter-Packet Time Models Through Information Criteria</strong>” here:</p>

<blockquote>
  <p><strong>Plain Text</strong></p>
  <blockquote>
    <p>A. d. S. Paschoalon and C. E. Rothenberg, “Automated Selection of Inter-Packet Time Models Through Information Criteria,” in IEEE Networking Letters, vol. 1, no. 2, pp. 56-59, June 2019, doi: 10.1109/LNET.2019.2905364.</p>
  </blockquote>

  <p><strong>BibTeX</strong></p>
  <blockquote>
    <p>@ARTICLE{8667676,
  author={Paschoalon, Anderson dos Santos and Rothenberg, Christian Esteve},
  journal={IEEE Networking Letters}, 
  title={Automated Selection of Inter-Packet Time Models Through Information Criteria}, 
  year={2019},
  volume={1},
  number={2},
  pages={56-59},
  doi={10.1109/LNET.2019.2905364}}</p>
  </blockquote>
</blockquote>]]></content><author><name>Anderson Paschoalon</name></author><category term="Swing" /><category term="Traffic Generator" /><category term="Traffic Modelling" /><category term="Wavelet" /><summary type="html"><![CDATA[Swing - Realistic and Responsive Network Traffic Generation]]></summary></entry><entry><title type="html">Spear</title><link href="http://localhost:4000/moforgit.html" rel="alternate" type="text/html" title="Spear" /><published>2022-01-25T03:00:00-03:00</published><updated>2022-01-25T03:00:00-03:00</updated><id>http://localhost:4000/moforgit</id><content type="html" xml:base="http://localhost:4000/moforgit.html"><![CDATA[<h1 id="spear-mod-organizer-for-git-versioning">Spear: Mod Organizer for Git Versioning</h1>

<p>MoForGit is a tool that allows you create a Git repository using a Mod Organizer Tools.</p>

<ul>
  <li>
    <p>Allows you to manage different installations of Steam Game in the same Hard Disk;</p>
  </li>
  <li>
    <p>Transform the installation folder into a git repository, and gitignore all the game files – do file versioning of only your mod files.</p>
  </li>
</ul>]]></content><author><name>Anderson Paschoalon</name></author><category term="Skyrim" /><category term="Mod" /><category term="Desktop" /><category term="CSharp" /><summary type="html"><![CDATA[Mod organizer for Git Versioning]]></summary></entry><entry><title type="html">Tabletop RPG Soundtrack</title><link href="http://localhost:4000/tabletop.html" rel="alternate" type="text/html" title="Tabletop RPG Soundtrack" /><published>2021-08-01T03:00:00-03:00</published><updated>2021-08-01T03:00:00-03:00</updated><id>http://localhost:4000/tabletop</id><content type="html" xml:base="http://localhost:4000/tabletop.html"><![CDATA[<h1 id="tabletop-rpg-soundtrack">Tabletop RPG Soundtrack</h1>]]></content><author><name>Anderson Paschoalon</name></author><category term="RPG" /><category term="Tabletop" /><category term="Soundtrack" /><summary type="html"><![CDATA[Tabletop RPG Soundtrack]]></summary></entry><entry><title type="html">SIMITAR - SniffIng ModellIng and TrAffic geneRation</title><link href="http://localhost:4000/simitar.html" rel="alternate" type="text/html" title="SIMITAR - SniffIng ModellIng and TrAffic geneRation" /><published>2019-08-27T03:00:00-03:00</published><updated>2019-08-27T03:00:00-03:00</updated><id>http://localhost:4000/simitar</id><content type="html" xml:base="http://localhost:4000/simitar.html"><![CDATA[<p align="center">
	<img src="./assets/img/posts/simitar/simitar-large.jpg" width="300" title="This is a Scimitar, not a Simitar :P" />
</p>

<h2 id="1-introdution">1. Introdution</h2>

<p>SIMITAR stands for SIMITAR: SnIffing, ModellIng and TrAffic geneRation. SIMITAR is a tool for creating synthetic and realist network traffic. It uses actual netowork traffic (live captures or pcap files) for creating a flow-oriented traffic model. This model is used for creating network traffic, and is provided as parameter for the traffic generator. It is self-configurated because you dont have to care about adjusting stochastic parameters such as exponenetial rates, protocol, ports, or traffic rates as input parameters. It is all contained inside te traffic model created.</p>

<p align="center">
	<img src="./assets/img/posts/simitar/simitar-digram-project-cycle.png" width="400" />
</p>

<p>The traffic generator is not attached to a especific technology. It has a flow scheduler, which creates a thread for each flow. As traffic generator engine we can use from applications to low-level C/C++ lybraries. Currently we have extended it to <a href="http://libtins.github.io/">Libtins</a>(C++ packet frafter library) and <a href="https://iperf.fr/">Iperf</a>.</p>

<p align="center">
	<img src="./assets/img/posts/simitar/simitar-arch1.svg" width="400" />
</p>

<h2 id="2-quick-installation-guide">2. Quick installation Guide</h2>

<p>Clone this project directory:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/AndersonPaschoalon/ProjetoMestrado
</code></pre></div></div>
<p>Go to SIMITAR root directory:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>Projeto/Mestrado/SIMITAR/
</code></pre></div></div>
<p>Run the <code class="language-plaintext highlighter-rouge">build.py</code> script. This is a script used to simplify the installarion of dependencies and build process. Type:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build.py --deps
</code></pre></div></div>
<p>Types <code class="language-plaintext highlighter-rouge">y/Yes</code> for any request of confimation. To build type:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./build.py --clean
./build.py --build
</code></pre></div></div>
<p>These commands will ensure all required directories are created, and run <code class="language-plaintext highlighter-rouge">make clean</code> and <code class="language-plaintext highlighter-rouge">make</code> for each component in the right order. Link for all the binaries will be placed at <code class="language-plaintext highlighter-rouge">bin/</code>. This application use absoluthe paths for the files, so you may execute any executable from any place. These links and executables are equivalent:</p>

<table>
  <thead>
    <tr>
      <th>executable</th>
      <th>link</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>sniffer/sniffer-cli.py</td>
      <td>bin/simitar-sniffer</td>
    </tr>
    <tr>
      <td>trace-analyzer/trace-analyzer</td>
      <td>bin/simitar-trace-analyzer</td>
    </tr>
    <tr>
      <td>simitar-gen/simitar-gen</td>
      <td>bin/simitar-gen</td>
    </tr>
  </tbody>
</table>

<h2 id="3-components-and-apps">3. Components and apps</h2>

<p>SIMITAR is composed of 4 components:</p>

<ul>
  <li>Sniffer (<code class="language-plaintext highlighter-rouge">sniffer/sniffer-cli.py</code> or <code class="language-plaintext highlighter-rouge">bin/simitar-sniffer</code>) : Capture data from the pcap files or live captures.</li>
  <li>Database (<code class="language-plaintext highlighter-rouge">data/db/Trace.db</code>): local database for the capture traces.</li>
  <li>Trace Analyzer (<code class="language-plaintext highlighter-rouge">trace-analyzer/trace-analyzer</code> or <code class="language-plaintext highlighter-rouge">bin/trace-analyzer</code>):  creates the XML file (Compact Trace Descriptor) used by simitar-gen to create a synthetic traffic. The files are placed at the directory <code class="language-plaintext highlighter-rouge">/data/xml/</code>. Some pre-generated Compact Trace Descriptor files are already placed there.</li>
  <li>Traffic Generator (<code class="language-plaintext highlighter-rouge">simitar-gen/simitar-gen</code> or <code class="language-plaintext highlighter-rouge">bin/simitar-gen</code>): creates the sysnthetic traffic. A component diagram of the wole project is placed in the image below.</li>
</ul>

<p align="center">
	<img src="./assets/img/posts/simitar/simitar-architecture-diagram.png" width="400" />
</p>

<h2 id="4-basic-execution">4. Basic Execution</h2>

<p>Before executing any command, you must load the enviroment variables:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source </span>data/config/simitar-workspace-config.sh
</code></pre></div></div>
<p>Sniffer works collecting information about an input traffic such as a pcap file
or a live traffic, and stores it in a sqlite3 database. It can be executed on
the directory <code class="language-plaintext highlighter-rouge">sniffer/</code>. Eg.:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./sniffer-cli.py new <span class="s2">"intrig-traffic"</span> live eth0 <span class="nt">--timeout</span> 15
</code></pre></div></div>
<p>This command will start and store a new capture trace on the local database. This capture will least for 15 seconds.  Ather this execution, use this command to show the capture information on the database:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./sniffer-cli.py list
</code></pre></div></div>
<p>Trace Analyzer creates a compact trace descriptor in XML file using a saved 
in the database. It salves the xml on the directory <code class="language-plaintext highlighter-rouge">data/xml/</code>. It can be 
executed on the directory <code class="language-plaintext highlighter-rouge">trace-analyzer/</code>. Eg.:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./trace-analyzer <span class="nt">--trace</span> <span class="s2">"intrig-traffic"</span>
</code></pre></div></div>
<p>The name passed in the <code class="language-plaintext highlighter-rouge">--trace</code> option must be the same as the one stored in the local database. Many others options are available(you may check tem typing <code class="language-plaintext highlighter-rouge">--help</code>) but none is mandatory. They may be used to control the parameters on the modelling process. After the execution, you may type on the root directory this command do check if the compact traffic trace was created:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls </span>data/xml/<span class="k">*</span> |grep <span class="s2">"intrig-traffic"</span>
</code></pre></div></div>
<p>It must show two files:  <code class="language-plaintext highlighter-rouge">intrig-traffic.sec.xml</code> and <code class="language-plaintext highlighter-rouge">intrig-traffic.ms.xml</code>. The first was parameterized using a time-scale of seconds, and the second of milliseconds. Some tools, like D-ITG use milliseconds as parameter input for its stochastic models.
The traffic generator simitar-gen is able to create traffic based on the model
created by the traffic generator. It can be executed on the directory 
simitar-gen/. To generate and receive the traffic, execute:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> <span class="nt">-E</span> ./simitar-gen <span class="nt">--tool</span> iperf <span class="nt">--mode</span> client <span class="nt">--ether</span> eth0 <span class="nt">--xml</span> ../data/xml/intrig-traffic.sec.xml <span class="nt">--dst-ip</span> 10.0.0.2
<span class="nb">sudo</span> <span class="nt">-E</span> ./simitar-gen <span class="nt">--tool</span> tins <span class="nt">--mode</span> client <span class="nt">--ether</span> eth0 <span class="nt">--xml</span> ../data/xml/intrig-traffic.sec.xml
<span class="nb">sudo</span> <span class="nt">-E</span> ./simitar-gen <span class="nt">--tool</span> iperf <span class="nt">--mode</span> server <span class="nt">--ether</span> eth0 <span class="nt">--xml</span> ../data/xml/intrig-traffic.sec.xml
</code></pre></div></div>
<p>Iperf and D-ITG  require the use of a client and a server, since it creates a 
connection before sending any packets. Others tools like tins, require
just the operation as a client, since since it crafts packets “on the wire”. It is important the use of the <code class="language-plaintext highlighter-rouge">-E</code> option on <code class="language-plaintext highlighter-rouge">sudo</code> to export the enviroment variables.</p>

<h2 id="5-demos">5. Demos</h2>

<h3 id="51-5-minutes-or-less-demo-if-you-already-have-everything-installed">5.1. 5 minutes (or less) demo (if you already have everything installed)</h3>

<p>Open two terminals (we recomend <a href="https://gnometerminator.blogspot.com/p/introduction.html">terminator</a>). First, lets try <code class="language-plaintext highlighter-rouge">iperf</code> as packet generator engine. At SIMITAR root directory:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source </span>data/config/simitar-workspace-config.sh
<span class="nb">sudo</span> <span class="nt">-E</span> ./bin/simitar-gen <span class="nt">--tool</span> iperf <span class="nt">--mode</span> server <span class="nt">--ether</span> lo  <span class="nt">--xml</span> data/xml/skype.sec.xml
</code></pre></div></div>
<p>Than, on another terminal, execute:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source </span>data/config/simitar-workspace-config.sh
<span class="nb">sudo</span> <span class="nt">-E</span> ./bin/simitar-gen <span class="nt">--tool</span> iperf <span class="nt">--mode</span> client <span class="nt">--ether</span> lo  <span class="nt">--xml</span> data/xml/skype.sec.xml <span class="nt">--dst-ip</span> 127.0.0.1
</code></pre></div></div>
<p>To test Libtins as packet generator engine, just execute:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">source </span>data/config/simitar-workspace-config.sh
<span class="nb">sudo</span> <span class="nt">-E</span> ./bin/simitar-gen <span class="nt">--tool</span> tins <span class="nt">--mode</span> client <span class="nt">--ether</span> lo  <span class="nt">--xml</span> data/xml/skype.sec.xml <span class="nt">--dst-ip</span> 127.0.0.1
</code></pre></div></div>

<h3 id="52-opendaylight-topology-demo">5.2. OpenDayLight Topology Demo</h3>

<p>For running this demo, you must have installed the following tools installed:</p>
<ul>
  <li>Wireshark</li>
  <li>Mininet</li>
  <li>OpenDayLight (distribution-karaf-0.4.0-Beryllium)</li>
  <li>SIMITAR
We also recoment a XML visualizer, such as XML Tree Editor.</li>
</ul>

<h4 id="521-installing--and-running-opendaylight-beryllium">5.2.1. Installing  and running OpenDayLight (Beryllium)</h4>

<p>First, we procedute with the follow commans on the terminal</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt-get update
apt-get <span class="nb">install </span>maven git unzip
</code></pre></div></div>
<p>Than, you cd to the directory you want to install OpenDayLight, and execute:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://nexus.opendaylight.org/content/groups/public/org/opendaylight/integration/distribution-karaf/0.4.0-Beryllium/distribution-karaf-0.4.0-Beryllium.zip
unzip distribution-karaf-0.4.0-Beryllium.zip
<span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/usr/lib/jvm/java-1.8.0-openjdk-amd64
</code></pre></div></div>
<p>To run OpenDaylight, execute:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>distribution-karaf-0.4.0-Beryllium.zip
./bin/karaf
</code></pre></div></div>
<p>On the OpenDayLight terminal, execute</p>
<pre><code class="language-command">opendaylight-user@root&gt; feature:install odl-restconf odl-l2switch-switch odl-mdsal-apidocs odl-dlux-core
opendaylight-user@root&gt; feature:install odl-dlux-all odl-openflowplugin-flow-services-ui
opendaylight-user@root&gt; feature:install  odl-dlux-core odl-dlux-node odl-dlux-yangui odl-dlux-yangvisualizer
</code></pre>
<p>You may access the web interface of OpenDayLight using this link and login/passorwds on your browser:</p>
<pre><code class="language-command">http://localhost:8181/index.html
login: admin
password: admin
</code></pre>

<h4 id="522-running-and-visualizing-our-mininet-topology">5.2.2 Running and visualizing our Mininet topology:</h4>

<p>From SIMITAR root directory, run:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>Tests/SimulationMininet/
</code></pre></div></div>
<p>First of all, clean up mininet:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>mn <span class="nt">-c</span>
</code></pre></div></div>
<p>We first will build the simpler topology:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> ./simple-topo-test.py
</code></pre></div></div>
<p>From Mininet terminal, you have to tell OpenDayLight where are all switches:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mininet&gt; pingall
</code></pre></div></div>
<p align="center">
	<img src="./assets/img/posts/simitar/simitar-Screenshot1.png" width="700" />
</p>

<h4 id="523-finally-simitar">5.2.3 Finally, SIMITAR</h4>

<p>In the screenshot below you will see the topology we just build. To open a terminal for the host h1, type on mininet console:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mininet&gt; xterm h1 
</code></pre></div></div>
<p>On the h1 terminal, open Wireshark:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wireshark &amp;
</code></pre></div></div>
<p>and start scanning the interface <code class="language-plaintext highlighter-rouge">h1-eth0</code>. To run SIMITAR, execute:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>source data/config/simitar-workspace-config.sh
 ./bin/simitar-gen --tool tins --mode client --ether h1-eth0 --xml ./data/xml/skype.sec.xml
</code></pre></div></div>
<p>If you go to the Wireshark window you just oppened, you will the the packets being generated, and how the bandwidth looks like over the time. Simitar will stop its execution once the whole traffic descripted by <code class="language-plaintext highlighter-rouge">skype.sec.xml</code> is executed.</p>

<p align="center">
	<img src="./assets/img/posts/simitar/simitar-Screenshot2.png" width="700" />
</p>
<p align="center">
	<img src="./assets/img/posts/simitar/simitar-Screenshot3.png" width="700" />
</p>

<p>Since the implementation of Libtins, specified by the option <code class="language-plaintext highlighter-rouge">--tool tins</code> works as a packet injector, there is no need for the use of a server-size instantiation of SIMITAR. But if you choose iperf as traffic generator tool, you will need it. This time we will build a funnier topology:</p>
<pre><code class="language-command"># @ Tests/SimulationMininet/
$ sudo mn -c
$ sudo ./simple-topo-test.py
# @ mininet terminal. IF it fails the first time, just try again
mininet&gt; pingall
</code></pre>
<p>On the OpenDayLight session you oppened on your favourite bronwnser, reload the page. You will find something like this:</p>

<p align="center">
	<img src="./assets/img/posts/simitar/simitar-Screenshot4.png" width="700" />
</p>

<p>Much cooler.</p>

<p>Now, on the mininet terminal, execute:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mininet&gt; xterm h1
mininet&gt; xterm h8
</code></pre></div></div>
<p>Run wireshark on both, and go to SIMITAR directory on both was well.  On the h8 terminal, run the server first:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># xterm h8</span>
<span class="nb">source </span>data/config/simitar-workspace-config.sh
 ./bin/simitar-gen <span class="nt">--tool</span> tins <span class="nt">--mode</span> server <span class="nt">--ether</span> h1-eth0 <span class="nt">--xml</span> ./data/xml/skype.sec.xml 
</code></pre></div></div>

<p>Iperf need to know the IP addr of the destination, to stablishes contact. Try both commans below (in two different runs). In the first, you will just pass a single Ip address of destinations. For the second, to run properly, you will need to execute the server-side command of simitar on all hosts, from 2 to 8. The argument is a CSV file, in the format <IPAddr>,MACAddr. For iperf, there is no need for the MAC address. The MACs on the file `data/csv/ip-addrs-list1.csv` are not actually used.</IPAddr></p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># xterm h1</span>
<span class="nb">source </span>data/config/simitar-workspace-config.sh
 ./bin/simitar-gen <span class="nt">--tool</span> iperf <span class="nt">--mode</span> client <span class="nt">--ether</span> h1-eth0 <span class="nt">--xml</span> ./data/xml/skype.sec.xml  <span class="nt">--dst-ip</span> 10.0.08
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># xterm h1</span>
<span class="nb">source </span>data/config/simitar-workspace-config.sh
 ./bin/simitar-gen <span class="nt">--tool</span> iperf <span class="nt">--mode</span> client <span class="nt">--ether</span> h1-eth0 <span class="nt">--xml</span> ./data/xml/skype.sec.xml  <span class="nt">--dst-list-ip</span> ./data/csv/ip-addrs-list1.csv
</code></pre></div></div>]]></content><author><name>Anderson Paschoalon</name></author><category term="Simitar" /><category term="Traffic Generation" /><category term="Network Traffic Modelling" /><summary type="html"><![CDATA[SIMITAR - SniffIng ModellIng and TrAffic geneRation]]></summary></entry><entry><title type="html">SIMITAR - synthetic and realistic network traffic generation</title><link href="http://localhost:4000/simitar-thesis.html" rel="alternate" type="text/html" title="SIMITAR - synthetic and realistic network traffic generation" /><published>2019-03-19T16:32:20-03:00</published><updated>2019-03-19T16:32:20-03:00</updated><id>http://localhost:4000/simitar-thesis</id><content type="html" xml:base="http://localhost:4000/simitar-thesis.html"><![CDATA[<p><strong>Abstract</strong>:</p>

<p>Real network traffic has a different impact over network nodes if compared to constant traffic generated by tools like Iperf, even when they have the same average throughput. Busty traffic may cause buffers overflows while constant traffic does not, and can decrease the measurement accuracy. The number of flows may have an impact on flow-oriented nodes, such as SDN switches and controllers. In a scenario where software-defined networks will play an essential role in the future internet, a more in-depth validation of new technologies considering these aspects is crucial. Also, most of the open-source realistic traffic generator tools have the modeling layer coupled to the traffic generator, making a challenge update it to newer libraries and becoming them often outdated. Often most of the tools that support realistic traffic generation offer a broad set of options to be configured but are not auto-configurable. So the production of actual realistic traffic is a challenging project by itself. In this work, we are going to discuss in-depth this subject. As a final result for our research, we highlight two main contributions: a review on available solutions and network traffic modeling, and the propose of our traffic generator, called SIMITAR: SnIfing, ModellIng and TrAffic geneRation. This technology has a separated modeling framework from the traffic generator, being flow-oriented and auto-configurable. It creates and uses Compact Trace Descriptor files as inputs - XML files that describe traffic features for our traffic model. Currently, we may replicate with accuracy flow characteristics of all tested traffic, and the scaling features of some as well. We have given a particular focus on inter-packet times modeling, where we proposed a methodology based on information criteria for automating the process modeling and selection of the best model. We also proposed a cross-validation method to measure the methodology quality</p>

<p><strong>Resumo</strong>:</p>

<p>Um tráfego de rede real possui um impacto diferente sobre os nós da rede se comparado ao tráfego constante gerado por ferramentas como Iperf, mesmo com uma mesma taxa de transferência. Um tráfego em rajadas pode causar estouros de buffers enquanto um tráfego constante não, e pode também diminuir a precisão das medições. O número de fluxos pode ter um impacto nos nós orientados a fluxo, como switches e controladores SDN. Em um cenário em que as redes definidas por software desempenharão um papel essencial na Internet futura, uma validação mais aprofundada das novas tecnologias, considerando esses aspectos, é crucial. Além disso, a maioria das ferramentas geradoras de tráfego realistas de código aberto tem a camada de modelagem acoplada ao gerador de pacotes, o que dificulta sua atualização para novas bibliotecas, tornando-as freqüentemente desatualizadas. Por fim, a maioria das ferramentas open-source que suportam a geração de tráfego realista, oferecem um grande conjunto de opções a serem configuradas, mas não são auto configuráveis. Dessa forma a produção de um tráfego realista customizado torna-se uma tarefa desafiadora. Neste trabalho nos aprofundamos neste assunto. Como resultado final, para nossa pesquisa destacamos duas contribuições principais: uma investigação de revisão das soluções disponíveis e modelagem de tráfego de rede, e a proposta de nosso próprio gerador de tráfego chamado SIMITAR (acrônimo para sniffing, modelagem e geração de tráfego em inglês). Esta tecnologia possui estruturas separadas de modelagem e geração de tráfego, sendo orientada a fluxos e auto configurável. Ela cria e usa Descritores de Tráfego Compactos como arquivos de entrada - Arquivos XML que descrevem características para o nosso modelo de tráfego. Atualmente já conseguimos replicar com precisão métricas do nível de fluxos, e certas características de escala. Demos um enfoque especial na modelagem de tempos entre pacotes, onde propomos uma metodologia baseada em critérios de informação para automatizar a modelagem de processos e seleção do melhor modelo. Também propusemos um método de validação para medir a qualidade deste mesmo método</p>

<p><strong>Material</strong>:
DISSERTAÇÃO DIGITAL</p>

<p><strong>Idioma</strong>:
Inglês</p>

<p><strong>Número de chamada</strong>:
T/UNICAMP P262s</p>

<p><strong>Título paralelo/equiv.</strong>:
[SIMITAR]</p>

<p><strong>Publicação</strong>:
Campinas, SP : [s.n.], 2019.</p>

<p><strong>Descrição física</strong>:
1 recurso online (159 p.) : il., digital, arquivo PDF.</p>

<p><strong>Nota geral</strong>:
Orientador: Christian Rodolfo Esteve Rothenber</p>

<p><strong>Nota de dissertação ou tese</strong>:
Dissertação (mestrado) - Universidade Estadual de Campinas, Faculdade de Engenharia Elétrica e de Computação</p>

<p><strong>Nota de sistema</strong>:
Requisitos do sistema: Software para leitura de arquivo em PDF</p>

<p><strong>Assuntos</strong>:
Redes de computadores Critério de informação de Akaike Transformada wavelet Internet Processo estocástico Gradiente descendente</p>

<p><strong>Autoria</strong>:
Paschoalon, Ánderson dos Santos, 1990- Esteve Rothenberg, Christian Rodolfo, 1982- ORIENTADOR Batista, Daniel Macêdo, 1979- AVALIADOR Lee, Luan Ling, 1956- AVALIADOR Universidade Estadual de Campinas. Faculdade de Engenharia Elétrica e de Computação. Programa de Pós-Graduação em Engenharia Elétrica</p>

<p><strong>Sites</strong>:
DOI: https://doi.org/10.47749/T/UNICAMP.2019.1090415</p>

<p><strong>Citação</strong>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@phdthesis{
  simitar-thesis,
  author  = "Paschoalon, Anderson dos Santos ",
  title   = "SIMITAR: synthetic and realistic network traffic generation",
  school  = "State University of Campinas, Faculty of Electrical Engineering and Computing",
  year    = "2019",
  type    = "Master Dissertation",
  address = "Campinas, SP",
  month   = "March",
  note    = "\url{https://hdl.handle.net/20.500.12733/1636558}",
}
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PASCHOALON, Ánderson dos Santos. SIMITAR: synthetic and realistic network 
traffic generation = SIMITAR: geração de tráfego de rede sintético e 
realístico. 2019. 1 recurso online (159 p.) Dissertação (mestrado) - 
Universidade Estadual de Campinas, Faculdade de Engenharia Elétrica e de 
Computação, Campinas, SP. Disponível em: 
https://hdl.handle.net/20.500.12733/1636558. Acesso em: 13 jul. 2022. 
</code></pre></div></div>]]></content><author><name>Anderson Paschoalon</name></author><category term="Sniffing" /><category term="Modelling" /><category term="Traffic Generator" /><category term="Flow" /><category term="Libtins" /><category term="D-ITG" /><category term="Iperf" /><summary type="html"><![CDATA[todo.]]></summary></entry></feed>